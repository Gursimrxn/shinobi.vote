/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ModeratorRegistry,
  ModeratorRegistryInterface,
} from "../../../contracts/core/ModeratorRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTaskId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAModerator",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskAlreadyResolved",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskNotClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedClaimer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "moderator",
        type: "address",
      },
    ],
    name: "ModeratorOptedIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "moderator",
        type: "address",
      },
    ],
    name: "ModeratorOptedOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "TaskClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "attestationHash",
        type: "bytes32",
      },
    ],
    name: "TaskResolved",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STATUS_CLAIMED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STATUS_RESOLVED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STATUS_UNCLAIMED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
    ],
    name: "claimTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getModeratorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
    ],
    name: "getTask",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "attestationHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ModeratorRegistry.Task",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isModerator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optInModerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "optOutModerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "moderator",
        type: "address",
      },
    ],
    name: "removeModerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
    ],
    name: "resetTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "attestationHash",
        type: "bytes32",
      },
    ],
    name: "resolveTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
    ],
    name: "taskExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tasks",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "attestationHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001c600033610022565b506100ce565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166100c4576000838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561007c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016100c8565b5060005b92915050565b610b4f806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806391d14854116100b8578063b851a2321161007c578063b851a23214610327578063d547741f1461032f578063d99ad6ad14610342578063e579f5001461034a578063ec5c29ce146103be578063fa6f3936146103d157600080fd5b806391d14854146102db57806399a1a412146102ee578063a217fddf146102f5578063a81bda5f146102fd578063b7bf356a1461030557600080fd5b806334be93b4116100ff57806334be93b41461027557806336568abe1461028857806370f8c6f91461029b5780637319bcbe146102ae578063869d785f146102c857600080fd5b806301ffc9a71461013c5780630401d60d1461016457806315a290351461016e578063248a9ca3146102315780632f2ff15d14610262575b600080fd5b61014f61014a366004610a04565b6103f4565b60405190151581526020015b60405180910390f35b61016c61042b565b005b6101f261017c366004610a35565b6040805160808101825260008082526020820181905291810182905260608101919091525060009081526002602081815260409283902083516080810185528154815260018201546001600160a01b03811693820193909352600160a01b90920460ff1693820193909352910154606082015290565b60405161015b9190815181526020808301516001600160a01b03169082015260408083015160ff16908201526060918201519181019190915260800190565b61025461023f366004610a35565b60009081526020819052604090206001015490565b60405190815260200161015b565b61016c610270366004610a6a565b61046c565b61016c610283366004610a96565b610497565b61016c610296366004610a6a565b610620565b61016c6102a9366004610a35565b610658565b6102b6600181565b60405160ff909116815260200161015b565b61016c6102d6366004610ab8565b610760565b61014f6102e9366004610a6a565b6107b5565b6000610254565b610254600081565b6102b6600281565b61014f610313366004610a35565b600090815260026020526040902054151590565b6102b6600081565b61016c61033d366004610a6a565b6107de565b61016c610803565b61038e610358366004610a35565b60026020819052600091825260409091208054600182015491909201546001600160a01b03821691600160a01b900460ff169084565b604080519485526001600160a01b03909316602085015260ff90911691830191909152606082015260800161015b565b61016c6103cc366004610a35565b61084a565b61014f6103df366004610ab8565b60016020526000908152604090205460ff1681565b60006001600160e01b03198216637965db0b60e01b148061042557506301ffc9a760e01b6001600160e01b03198316145b92915050565b33600081815260016020526040808220805460ff191690555182917faa111f6e1f71cbd6bcc064a12f1846dce7793e45e94422fdd093b1ca0c5b778391a250565b600082815260208190526040902060010154610487816108bd565b61049183836108ca565b50505050565b3360009081526001602052604090205460ff166104c7576040516364c5a4cd60e01b815260040160405180910390fd5b816104e55760405163fea707d960e01b815260040160405180910390fd5b8061054b5760405162461bcd60e51b815260206004820152602b60248201527f4d6f64657261746f7252656769737472793a20696e76616c696420617474657360448201526a0e8c2e8d2dedc40d0c2e6d60ab1b60648201526084015b60405180910390fd5b600082815260026020526040902080546105775760405162461bcd60e51b815260040161054290610ad3565b600181810154600160a01b900460ff16146105a55760405163abbfac0d60e01b815260040160405180910390fd5b60018101546001600160a01b031633146105d257604051631712a9f760e21b815260040160405180910390fd5b60018101805460ff60a01b1916600160a11b17905560028101829055604051829084907fa9670404cdfc2f6b00c44abbe4726e3cf09b3825a6e6141c18768b381ca7c34890600090a3505050565b6001600160a01b03811633146106495760405163334bd91960e11b815260040160405180910390fd5b610653828261095c565b505050565b3360009081526001602052604090205460ff16610688576040516364c5a4cd60e01b815260040160405180910390fd5b806106a65760405163fea707d960e01b815260040160405180910390fd5b600081815260026020526040902080546106e557818155600181018054600160a01b6001600160a81b031990911633171790556000600282015561072f565b6001810154600160a01b900460ff16156107125760405163d1aec42b60e01b815260040160405180910390fd5b600181018054600160a01b6001600160a81b031990911633171790555b604051339083907f0e1f58463da369c5bf09630219fad2558dd2b2ead275c5dc36269b384dc138fe90600090a35050565b600061076b816108bd565b6001600160a01b038216600081815260016020526040808220805460ff19169055517faa111f6e1f71cbd6bcc064a12f1846dce7793e45e94422fdd093b1ca0c5b77839190a25050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000828152602081905260409020600101546107f9816108bd565b610491838361095c565b336000818152600160208190526040808320805460ff19169092179091555182917fe7294aa0539260e678971673cf520f3beb88831e40e500d62cd8da9d7484529691a250565b6000610855816108bd565b816108735760405163fea707d960e01b815260040160405180910390fd5b6000828152600260205260409020805461089f5760405162461bcd60e51b815260040161054290610ad3565b6001810180546001600160a81b031916905560006002909101555050565b6108c781336109c7565b50565b60006108d683836107b5565b610954576000838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561090c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610425565b506000610425565b600061096883836107b5565b15610954576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610425565b6109d182826107b5565b610a005760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610542565b5050565b600060208284031215610a1657600080fd5b81356001600160e01b031981168114610a2e57600080fd5b9392505050565b600060208284031215610a4757600080fd5b5035919050565b80356001600160a01b0381168114610a6557600080fd5b919050565b60008060408385031215610a7d57600080fd5b82359150610a8d60208401610a4e565b90509250929050565b60008060408385031215610aa957600080fd5b50508035926020909101359150565b600060208284031215610aca57600080fd5b610a2e82610a4e565b60208082526026908201527f4d6f64657261746f7252656769737472793a207461736b20646f6573206e6f7460408201526508195e1a5cdd60d21b60608201526080019056fea26469706673582212208855c81cd49175eaa9327c7f2c13ac9b0c7436e258114d6abeb618cdaa58d83664736f6c63430008140033";

type ModeratorRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ModeratorRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ModeratorRegistry__factory extends ContractFactory {
  constructor(...args: ModeratorRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ModeratorRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ModeratorRegistry__factory {
    return super.connect(runner) as ModeratorRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModeratorRegistryInterface {
    return new Interface(_abi) as ModeratorRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ModeratorRegistry {
    return new Contract(address, _abi, runner) as unknown as ModeratorRegistry;
  }
}
