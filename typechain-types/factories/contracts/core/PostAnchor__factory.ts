/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PostAnchor,
  PostAnchorInterface,
} from "../../../contracts/core/PostAnchor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "cidHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "metaHash",
        type: "bytes32",
      },
    ],
    name: "PostAnchored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "cidHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "metaHash",
        type: "bytes32",
      },
    ],
    name: "anchorPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "hashCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "hashMetadata",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610323806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630d8e6e2c14610051578063135717ef146100815780635caed767146100a257806389e16889146100b5575b600080fd5b60408051808201825260058152640312e302e360dc1b6020820152905161007891906101fb565b60405180910390f35b61009461008f366004610249565b6100ca565b604051908152602001610078565b6100946100b0366004610249565b61010d565b6100c86100c33660046102bb565b610161565b005b60008181036100db57506000610107565b82826040516020016100ee9291906102dd565b6040516020818303038152906040528051906020012090505b92915050565b6000816100db5760405162461bcd60e51b815260206004820152601f60248201527f506f7374416e63686f723a204349442063616e6e6f7420626520656d7074790060448201526064015b60405180910390fd5b816101ba5760405162461bcd60e51b815260206004820152602360248201527f506f7374416e63686f723a2043494420686173682063616e6e6f74206265207a60448201526265726f60e81b6064820152608401610158565b6040805142815260208101839052839133917fa33e34a8be77ffba3b19f7f58ece2322a5ef6b0e6fc5421ad6236aa22eac0e93910160405180910390a35050565b600060208083528351808285015260005b818110156102285785810183015185820160400152820161020c565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806020838503121561025c57600080fd5b823567ffffffffffffffff8082111561027457600080fd5b818501915085601f83011261028857600080fd5b81358181111561029757600080fd5b8660208285010111156102a957600080fd5b60209290920196919550909350505050565b600080604083850312156102ce57600080fd5b50508035926020909101359150565b818382376000910190815291905056fea26469706673582212207626fec704ea3fbefcb817285b53d4a26e61aa1524acc6571423141c830a840f64736f6c63430008140033";

type PostAnchorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PostAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PostAnchor__factory extends ContractFactory {
  constructor(...args: PostAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PostAnchor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PostAnchor__factory {
    return super.connect(runner) as PostAnchor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PostAnchorInterface {
    return new Interface(_abi) as PostAnchorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PostAnchor {
    return new Contract(address, _abi, runner) as unknown as PostAnchor;
  }
}
